/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MenuImport } from './routes/menu'
import { Route as MenuSearchImport } from './routes/menu/search'
import { Route as MenuChatImport } from './routes/menu/chat'
import { Route as MenuAccountImport } from './routes/menu/account'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as MenuChatUserIdImport } from './routes/menu/chat.$userId'

// Create/Update Routes

const MenuRoute = MenuImport.update({
  path: '/menu',
  getParentRoute: () => rootRoute,
} as any)

const MenuSearchRoute = MenuSearchImport.update({
  path: '/search',
  getParentRoute: () => MenuRoute,
} as any)

const MenuChatRoute = MenuChatImport.update({
  path: '/chat',
  getParentRoute: () => MenuRoute,
} as any)

const MenuAccountRoute = MenuAccountImport.update({
  path: '/account',
  getParentRoute: () => MenuRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const MenuChatUserIdRoute = MenuChatUserIdImport.update({
  path: '/$userId',
  getParentRoute: () => MenuChatRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/menu/account': {
      id: '/menu/account'
      path: '/account'
      fullPath: '/menu/account'
      preLoaderRoute: typeof MenuAccountImport
      parentRoute: typeof MenuImport
    }
    '/menu/chat': {
      id: '/menu/chat'
      path: '/chat'
      fullPath: '/menu/chat'
      preLoaderRoute: typeof MenuChatImport
      parentRoute: typeof MenuImport
    }
    '/menu/search': {
      id: '/menu/search'
      path: '/search'
      fullPath: '/menu/search'
      preLoaderRoute: typeof MenuSearchImport
      parentRoute: typeof MenuImport
    }
    '/menu/chat/$userId': {
      id: '/menu/chat/$userId'
      path: '/$userId'
      fullPath: '/menu/chat/$userId'
      preLoaderRoute: typeof MenuChatUserIdImport
      parentRoute: typeof MenuChatImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  MenuRoute: MenuRoute.addChildren({
    MenuAccountRoute,
    MenuChatRoute: MenuChatRoute.addChildren({ MenuChatUserIdRoute }),
    MenuSearchRoute,
  }),
  AuthLoginRoute,
  AuthRegisterRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/menu",
        "/auth/login",
        "/auth/register"
      ]
    },
    "/menu": {
      "filePath": "menu.tsx",
      "children": [
        "/menu/account",
        "/menu/chat",
        "/menu/search"
      ]
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/menu/account": {
      "filePath": "menu/account.tsx",
      "parent": "/menu"
    },
    "/menu/chat": {
      "filePath": "menu/chat.tsx",
      "parent": "/menu",
      "children": [
        "/menu/chat/$userId"
      ]
    },
    "/menu/search": {
      "filePath": "menu/search.tsx",
      "parent": "/menu"
    },
    "/menu/chat/$userId": {
      "filePath": "menu/chat.$userId.tsx",
      "parent": "/menu/chat"
    }
  }
}
ROUTE_MANIFEST_END */
