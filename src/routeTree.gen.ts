/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HelloImport } from './routes/hello'
import { Route as AppImport } from './routes/app'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AppSearchImport } from './routes/app/search'
import { Route as AppChatImport } from './routes/app/chat'
import { Route as AppAccountImport } from './routes/app/account'
import { Route as AppChatChatIdImport } from './routes/app/chat.$chatId'

// Create/Update Routes

const HelloRoute = HelloImport.update({
  path: '/hello',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AppSearchRoute = AppSearchImport.update({
  path: '/search',
  getParentRoute: () => AppRoute,
} as any)

const AppChatRoute = AppChatImport.update({
  path: '/chat',
  getParentRoute: () => AppRoute,
} as any)

const AppAccountRoute = AppAccountImport.update({
  path: '/account',
  getParentRoute: () => AppRoute,
} as any)

const AppChatChatIdRoute = AppChatChatIdImport.update({
  path: '/$chatId',
  getParentRoute: () => AppChatRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/hello': {
      id: '/hello'
      path: '/hello'
      fullPath: '/hello'
      preLoaderRoute: typeof HelloImport
      parentRoute: typeof rootRoute
    }
    '/app/account': {
      id: '/app/account'
      path: '/account'
      fullPath: '/app/account'
      preLoaderRoute: typeof AppAccountImport
      parentRoute: typeof AppImport
    }
    '/app/chat': {
      id: '/app/chat'
      path: '/chat'
      fullPath: '/app/chat'
      preLoaderRoute: typeof AppChatImport
      parentRoute: typeof AppImport
    }
    '/app/search': {
      id: '/app/search'
      path: '/search'
      fullPath: '/app/search'
      preLoaderRoute: typeof AppSearchImport
      parentRoute: typeof AppImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/app/chat/$chatId': {
      id: '/app/chat/$chatId'
      path: '/$chatId'
      fullPath: '/app/chat/$chatId'
      preLoaderRoute: typeof AppChatChatIdImport
      parentRoute: typeof AppChatImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AppRoute: AppRoute.addChildren({
    AppAccountRoute,
    AppChatRoute: AppChatRoute.addChildren({ AppChatChatIdRoute }),
    AppSearchRoute,
  }),
  HelloRoute,
  AuthLoginRoute,
  AuthRegisterRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/app",
        "/hello",
        "/auth/login",
        "/auth/register"
      ]
    },
    "/app": {
      "filePath": "app.tsx",
      "children": [
        "/app/account",
        "/app/chat",
        "/app/search"
      ]
    },
    "/hello": {
      "filePath": "hello.tsx"
    },
    "/app/account": {
      "filePath": "app/account.tsx",
      "parent": "/app"
    },
    "/app/chat": {
      "filePath": "app/chat.tsx",
      "parent": "/app",
      "children": [
        "/app/chat/$chatId"
      ]
    },
    "/app/search": {
      "filePath": "app/search.tsx",
      "parent": "/app"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/app/chat/$chatId": {
      "filePath": "app/chat.$chatId.tsx",
      "parent": "/app/chat"
    }
  }
}
ROUTE_MANIFEST_END */
